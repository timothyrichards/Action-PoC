// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

#nullable enable

using System;
using SpacetimeDB.ClientApi;
using System.Collections.Generic;
using System.Runtime.Serialization;

namespace SpacetimeDB.Types
{
    public sealed partial class RemoteReducers : RemoteBase
    {
        public delegate void PlayerSetAnimationStateHandler(ReducerEventContext ctx, DbAnimationState animationState);
        public event PlayerSetAnimationStateHandler? OnPlayerSetAnimationState;

        public void PlayerSetAnimationState(DbAnimationState animationState)
        {
            conn.InternalCallReducer(new Reducer.PlayerSetAnimationState(animationState), this.SetCallReducerFlags.PlayerSetAnimationStateFlags);
        }

        public bool InvokePlayerSetAnimationState(ReducerEventContext ctx, Reducer.PlayerSetAnimationState args)
        {
            if (OnPlayerSetAnimationState == null) return false;
            OnPlayerSetAnimationState(
                ctx,
                args.AnimationState
            );
            return true;
        }
    }

    public abstract partial class Reducer
    {
        [SpacetimeDB.Type]
        [DataContract]
        public sealed partial class PlayerSetAnimationState : Reducer, IReducerArgs
        {
            [DataMember(Name = "animation_state")]
            public DbAnimationState AnimationState;

            public PlayerSetAnimationState(DbAnimationState AnimationState)
            {
                this.AnimationState = AnimationState;
            }

            public PlayerSetAnimationState()
            {
                this.AnimationState = new();
            }

            string IReducerArgs.ReducerName => "player_set_animation_state";
        }
    }

    public sealed partial class SetReducerFlags
    {
        internal CallReducerFlags PlayerSetAnimationStateFlags;
        public void PlayerSetAnimationState(CallReducerFlags flags) => PlayerSetAnimationStateFlags = flags;
    }
}
